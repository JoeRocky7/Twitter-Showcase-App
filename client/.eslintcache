[{"C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\index.js":"1","C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\components\\Random.js":"2","C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\components\\Search.js":"3","C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\components\\Nav.js":"4","C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\App.js":"5","C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\components\\Home.js":"6","C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\components\\ContentCards.js":"7","C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\components\\UserCards.js":"8"},{"size":219,"mtime":1610574899655,"results":"9","hashOfConfig":"10"},{"size":3831,"mtime":1613926996209,"results":"11","hashOfConfig":"10"},{"size":2025,"mtime":1613944283804,"results":"12","hashOfConfig":"10"},{"size":1071,"mtime":1613759992901,"results":"13","hashOfConfig":"10"},{"size":602,"mtime":1613701542726,"results":"14","hashOfConfig":"10"},{"size":676,"mtime":1613848891811,"results":"15","hashOfConfig":"10"},{"size":1274,"mtime":1613935335114,"results":"16","hashOfConfig":"10"},{"size":1429,"mtime":1613932895847,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qasctn",{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\index.js",[],"C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\components\\Random.js",["36","37","38","39","40","41"],"C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\components\\Search.js",["42"],"C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\components\\Nav.js",[],"C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\App.js",[],"C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\components\\Home.js",[],"C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\components\\ContentCards.js",["43","44"],"import React from 'react'\n\nconst ContentCards = ({ contentTweet }) => {\n    const retweetedText = contentTweet.retweeted_status?.full_text;\n    const imageTweet = contentTweet.retweeted_status?.extended_entities?.media[0].media_url\n\n    return (\n        <div class=\"modals-container\">\n            <div class=\"modals\">\n                <div class=\"modal-header\">\n                    <div class=\"image-container\">\n                        <img src={contentTweet.user.profile_image_url} />\n                        <div>{contentTweet.user.name}</div>\n                        <div id=\"screen-name\">@ {contentTweet.user.screen_name}</div>\n                    </div>\n                    <div class=\"stats-container\">\n                        <div><i class=\"fas fa-heart\"></i>{contentTweet.favorite_count}</div>\n                        <div><i class=\"fas fa-retweet\"></i>{contentTweet.retweet_count}</div>\n                    </div>\n                </div>\n\n                {retweetedText ?\n                    <p>{retweetedText}</p>\n                    : <p>{contentTweet.full_text}</p>}\n                <div class=\"card-image\">\n                    <img id=\"card-image\" src={imageTweet} />\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default ContentCards\n","C:\\Users\\joe\\Documents\\coding projects\\twitter-showcase-app\\client\\src\\components\\UserCards.js",["45","46"],"import React from 'react'\n\nconst UserCards = ({ userTweet }) => {\n    const retweetedText = userTweet.retweeted_status?.full_text;\n    const imageTweet = userTweet.retweeted_status?.extended_entities?.media[0].media_url;\n    \n    return (\n        <div class=\"modals-container\">\n            <div class=\"modals\">\n                    <div class=\"modal-header\">\n                        <div class=\"image-container\">\n                            <img src={userTweet.user.profile_image_url} />\n                            <div>{userTweet.user.name}</div>\n                            <div id=\"screen-name\">@ {userTweet.user.screen_name}</div>\n\n                        </div>\n\n                        <div class=\"stats-container\">\n                            <div><i class=\"fas fa-heart\"></i>{userTweet.favorite_count}</div>\n                            <div><i class=\"fas fa-retweet\"></i>{userTweet.retweet_count}</div>\n                        </div>\n                    </div>\n\n                    <section>\n                        {retweetedText ? \n                        <p>{retweetedText}</p>\n                            : <p>{userTweet.full_text}</p>}\n                        \n                        <div class=\"card-image\">\n                            <img id=\"card-image\" src={imageTweet} />\n                        </div>\n                    </section>\n                </div>\n            </div>\n    )\n}\n\nexport default UserCards",{"ruleId":"47","severity":1,"message":"48","line":30,"column":25,"nodeType":"49","endLine":30,"endColumn":192},{"ruleId":"47","severity":1,"message":"48","line":35,"column":25,"nodeType":"49","endLine":35,"endColumn":172},{"ruleId":"47","severity":1,"message":"48","line":40,"column":25,"nodeType":"49","endLine":40,"endColumn":183},{"ruleId":"47","severity":1,"message":"48","line":45,"column":21,"nodeType":"49","endLine":45,"endColumn":145},{"ruleId":"47","severity":1,"message":"48","line":50,"column":25,"nodeType":"49","endLine":50,"endColumn":145},{"ruleId":"47","severity":1,"message":"48","line":62,"column":33,"nodeType":"49","endLine":62,"endColumn":89},{"ruleId":"50","severity":1,"message":"51","line":10,"column":20,"nodeType":"52","messageId":"53","endLine":10,"endColumn":29},{"ruleId":"47","severity":1,"message":"48","line":12,"column":25,"nodeType":"49","endLine":12,"endColumn":74},{"ruleId":"47","severity":1,"message":"48","line":26,"column":21,"nodeType":"49","endLine":26,"endColumn":61},{"ruleId":"47","severity":1,"message":"48","line":12,"column":29,"nodeType":"49","endLine":12,"endColumn":75},{"ruleId":"47","severity":1,"message":"48","line":30,"column":29,"nodeType":"49","endLine":30,"endColumn":69},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'setIsOpen' is assigned a value but never used.","Identifier","unusedVar"]